# Local Development Environment Setup
#
# Prerequisites:
# - Docker installed on your machine
# - Environment file (.env.development.local) in the env folder
#   Copy from .env.development.local.sample as a template
#
# To start the application (run one of the following commands):
#   docker-compose -f docker-compose.local.yaml up        # Traditional syntax
#   docker compose -f docker-compose.local.yaml up        # New Docker Compose syntax
#   docker-compose -f docker-compose.local.yaml up -d     # Run in detached mode
#
# To stop the application (run one of the following commands):
#   docker-compose -f docker-compose.local.yaml down      # Traditional syntax
#   docker compose -f docker-compose.local.yaml down      # New Docker Compose syntax
#
# Additional useful commands:
#   docker-compose -f docker-compose.local.yaml ps        # List running containers
#   docker-compose -f docker-compose.local.yaml logs      # View logs
#   docker-compose -f docker-compose.local.yaml logs -f   # Follow logs in real-time

services:
  app:
    build: .
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    networks:
      - app-network
    volumes:
      - ./:/app
    env_file:
      - ./env/.env.development.local
    platform: linux/amd64
    command: ["npm", "run", "nodemon"]

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    container_name: mongo
    env_file:
      - ./env/.env.development.local
    volumes:
      - data:/data/db
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge
    
volumes:
  data: